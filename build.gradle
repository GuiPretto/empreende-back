plugins {
	id 'org.springframework.boot' version '2.5.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'groovy'
	id 'application'
}

group = 'org.guipretto'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

jar {
	manifest {
		attributes(
				'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
				'Main-Class': 'org.guipretto.empreendeback.EmpreendeBackApplication'
		)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.codehaus.groovy:groovy'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
	useJUnitPlatform()
}

task stage(type: Copy, dependsOn: [clean, build]) {
	from jar.archivePath
	into project.rootDir
	rename {
		'app.jar'
	}
}
stage.mustRunAfter(clean)

clean {
	doLast	{
		project.file('app.jar').delete()
	}
}

gradle.taskGraph.whenReady {
	taskGraph ->
		if (taskGraph.hasTask(stage)) {
			test.enabled = false
		}
}